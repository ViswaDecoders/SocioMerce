{"version":3,"sources":["app/assets/logo-red.png","app/assets/message3.jpg","app/assets/message1.jpg","app/assets/message2.jpg","app/config/colors.js","app/components/Button.js","app/navigation/routes.js","app/screens/WelcomeScreen.js","app/screens/ViewImageScreen.js","app/config/styles.js","app/components/Text.js","app/components/list/Headings.js","app/components/Cards.js","app/components/list/ListItem.js","app/auth/context.js","app/screens/ListingDetailedScreens.js","app/components/Screen.js","app/components/list/ListItemSeperator.js","app/components/list/ListItemDeleteAction.js","app/screens/MessagesScreen.js","app/components/Icon.js","app/api/client.js","app/api/auth.js","app/auth/storage.js","app/screens/AccountScreen.js","app/components/ActivityIndicator.js","app/hooks/useApi.js","app/api/listing.js","app/screens/ListingScreen.js","app/components/TextInput.js","app/components/PickerItem.js","app/components/Picker.js","app/components/forms/Form.js","app/components/forms/ErrorMessage.js","app/components/forms/FormFeild.js","app/components/forms/SubmitButton.js","app/components/forms/FormPicker.js","app/screens/LoginScreen.js","app/components/CategoryPickerItem.js","app/components/ImageInput.js","app/components/ImageInputList.js","app/components/forms/FormImagePicker.js","app/hooks/useLocation.js","app/screens/UploadScreen.js","app/screens/ListingEditScreen.js","app/screens/RegisterScreen.js","app/navigation/AuthNavigator.js","app/navigation/NavigationTheme.js","app/navigation/FeedNavigator.js","app/navigation/AccountNavigator.js","app/navigation/NewListingButton.js","app/navigation/AppNavigator.js","app/components/OfflineNotice.js","App.js","app/assets/background.jpg","app/assets/headphones.jpg","app/assets/message4.jpg","app/assets/user.jpeg"],"names":["module","exports","primary","secondary","black","white","grey","lightgrey","darkgray","danger","red","placeholdercol","styles","StyleSheet","create","button","backgroundColor","colors","borderRadius","justifyContent","alignItems","padding","marginVertical","width","text","color","fontSize","textTransform","fontWeight","AppButton","title","onPress","TouchableOpacity","style","Text","Object","freeze","LISTING_DETAILS","MESSAGES","REGISTER","background","flex","buttonContainer","logo","height","logoContainer","position","top","tagline","paddingVertical","textAlign","fontFamily","WelcomeScreen","navigation","ImageBackground","blurRadius","source","require","View","Image","Button","navigate","routes","image","deleteicon","right","closeicon","left","container","Platform","OS","AppText","children","otherProps","defaultStyles","head","fontStyle","Headings","card","marginBottom","overflow","detailedContainer","subTitle","Cards","imageUrl","TouchableWithoutFeedback","uri","numberOfLines","flexDirection","detailsContainer","marginLeft","flexGrow","subtitle","ListItem","IconComponent","renderRightActions","Swipeable","TouchableHighlight","underlayColor","MaterialCommunityIcons","name","size","AuthContext","React","createContext","price","userContainer","ListingDetailedScreens","route","useContext","user","listing","setUser","params","product_img","unit_price","screen","paddingTop","Constants","statusBarHeight","view","Screen","SafeAreaView","seperator","ListItemSeperator","props","ListItemDeleteAction","initialMessages","id","description","headingContainer","heading","paddingLeft","MessagesScreen","useState","messages","setMessages","refreshing","console","log","FlatList","data","keyExtractor","message","toString","renderItem","item","filter","m","ItemSeparatorComponent","onRefresh","Icon","iconColor","apiClient","credentials","baseURL","headers","email","password","client","post","get","username","authToken","a","async","SecureStore","menuItems","icon","targetScreen","AccountScreen","ListItemSeperatorComponent","authApi","authStorage","ActivityIndicator","visible","autoPlay","loop","useApi","apiFunc","setData","error","setError","loading","setLoading","request","response","ok","problem","onUploadProgress","FormData","append","category","value","type","images","csrfToken","endpoint","progress","loaded","total","ListingScreen","getListingApi","listingsApi","useEffect","marginRight","AppTextInput","otheProps","TextInput","placeholderTextColor","PickerItem","label","closebutton","placeholder","AppPicker","items","numberOfColumns","onSelectItem","PickerItemComponent","selectedItem","modalVisiible","setModalVisiible","Modal","animationType","numColumns","AppForm","initialValues","onSubmit","validationSchema","ErrorMessage","AppFormFeild","useFormikContext","setFieldTouched","setFieldValue","errors","touched","values","onBlur","onChangeText","SubmitButton","handleSubmit","AppFormPicker","Yup","shape","required","min","alignSelf","marginTop","LoginScreen","loginFailed","setLoginFailed","authContext","result","autoCapitalize","autoCorrect","keyboardType","textContentType","secureTextEntry","paddingHorizontal","CategoryPickerItem","ImageInput","imageUri","onChangeImage","requestPermission","ImagePicker","granted","alert","selectImage","mediaTypes","Images","quality","cancelled","Alert","FormImagePicker","imageUris","useLocation","location","setLocation","getLocation","Location","coords","latitude","longitude","animation","UploadScreen","onDone","onAnimationFinish","max","nullable","categories","ListingEditScreen","uploadVisible","setUploadVisible","setProgress","resetForm","listingApi","categoty","FormFeild","maxLength","multiline","Stack","createStackNavigator","AuthNavigator","Navigator","component","options","headerShown","RegisterScreen","DefaultTheme","FeedNavigator","mode","screenOptions","AccountNavigator","headerTitleAlign","bottom","borderColor","borderWidth","NewListingButton","Tab","createBottomTabNavigator","AppNavigator","tabBarIcon","tabBarButton","zIndex","elevation","OfflineNotice","netInfo","useNetInfo","isInternetReachable","App","token","restoreToken","Provider","NavigationContainer","theme","NavigationTheme","LogBox","ignoreLogs"],"mappings":"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","file":"static/js/app.98bf9b2b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-red.3cd9e5fe.png\";","module.exports = __webpack_public_path__ + \"static/media/message3.7e2bdd80.jpg\";","module.exports = __webpack_public_path__ + \"static/media/message1.711ed921.jpg\";","module.exports = __webpack_public_path__ + \"static/media/message2.8c203a47.jpg\";","export default {\r\n  primary: \"#fc5c65\",\r\n  secondary: \"#4ecdc4\",\r\n  black: \"#000\",\r\n  white: \"#fff\",\r\n  grey: \"#6e6969\",\r\n  lightgrey: \"#f8f4f4\",\r\n  darkgray: \"#0c0c0c\",\r\n  danger: \"#ff5252\",\r\n  red: \"red\",\r\n  placeholdercol: \"#C7C7CD\",\r\n};\r\n","import React from \"react\";\r\nimport { Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\nfunction AppButton({ title, onPress, color = \"primary\" }) {\r\n  return (\r\n    <TouchableOpacity\r\n      style={[styles.button, { backgroundColor: colors[color] }]}\r\n      onPress={onPress}\r\n    >\r\n      <Text style={styles.text}>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    backgroundColor: colors.primary,\r\n    borderRadius: 25,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 15,\r\n    marginVertical: 10,\r\n    width: \"100%\",\r\n  },\r\n  text: {\r\n    color: colors.white,\r\n    fontSize: 18,\r\n    textTransform: \"uppercase\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default AppButton;\r\n","export default Object.freeze({\r\n  LISTING_DETAILS: \"ListingDetails\",\r\n  MESSAGES: \"Messages\",\r\n  REGISTER: \"Register\",\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  ImageBackground,\r\n  StyleSheet,\r\n  Image,\r\n  Text,\r\n  View,\r\n  img,\r\n} from \"react-native\";\r\nimport Button from \"../components/Button\";\r\nimport routes from \"../navigation/routes\";\r\n\r\nfunction WelcomeScreen({ navigation }) {\r\n  return (\r\n    <ImageBackground\r\n      blurRadius={5}\r\n      style={styles.background}\r\n      source={require(\"../assets/background.jpg\")}\r\n    >\r\n      <View style={styles.logoContainer}>\r\n        <Image style={styles.logo} source={require(\"../assets/logo-red.png\")} />\r\n        <Text style={styles.tagline}>Where social media meets E-Commerce</Text>\r\n      </View>\r\n      <View style={styles.buttonContainer}>\r\n        <Button title=\"login\" onPress={() => navigation.navigate(\"Login\")} />\r\n        <Button\r\n          title=\"Register\"\r\n          color=\"secondary\"\r\n          onPress={() => navigation.navigate(routes.REGISTER)}\r\n        />\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonContainer: {\r\n    padding: 10,\r\n    width: \"100%\",\r\n  },\r\n  logo: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  logoContainer: {\r\n    position: \"absolute\",\r\n    top: 70,\r\n    alignItems: \"center\",\r\n  },\r\n  tagline: {\r\n    fontSize: 20,\r\n    fontWeight: \"600\",\r\n    paddingVertical: 10,\r\n    textTransform: \"capitalize\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"sans-serif-thin\" || \"sans-serif-light\",\r\n  },\r\n});\r\n\r\nexport default WelcomeScreen;\r\n","import React from \"react\";\r\nimport { Image, View, StyleSheet } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nfunction ViewImageScreen(props) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.closeicon}>\r\n        <MaterialCommunityIcons\r\n          name=\"close\"\r\n          size={35}\r\n          color=\"white\"\r\n        ></MaterialCommunityIcons>\r\n      </View>\r\n      <View style={styles.deleteicon}>\r\n        <MaterialCommunityIcons\r\n          name=\"trash-can-outline\"\r\n          size={35}\r\n          color=\"white\"\r\n        ></MaterialCommunityIcons>\r\n      </View>\r\n      <Image\r\n        resizeMode=\"contain\"\r\n        style={styles.image}\r\n        source={require(\"../assets/headphones.jpg\")}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    top: 45,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  deleteicon: {\r\n    position: \"absolute\",\r\n    top: 40,\r\n    right: 30,\r\n  },\r\n  closeicon: {\r\n    position: \"absolute\",\r\n    top: 40,\r\n    left: 30,\r\n  },\r\n  container: {\r\n    backgroundColor: colors.black,\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default ViewImageScreen;\r\n","import { Platform } from \"react-native\";\r\nimport colors from \"./colors\";\r\n\r\nexport default {\r\n  colors,\r\n  text: {\r\n    fontSize: 18,\r\n    color: colors.darkgray,\r\n    fontFamily: Platform.OS === \"android\" ? \"Roboto\" : \"Avenir\",\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { Text } from \"react-native\";\r\nimport defaultStyles from \"../config/styles\";\r\n\r\nfunction AppText({ children, style, ...otherProps }) {\r\n  return (\r\n    <Text style={[defaultStyles.text, style]} {...otherProps}>\r\n      {children}\r\n    </Text>\r\n  );\r\n}\r\n\r\nexport default AppText;\r\n","import React from \"react\";\r\nimport { Text, StyleSheet } from \"react-native\";\r\n\r\nfunction Headings({ children, style }) {\r\n  return <Text style={[styles.head, style]}>{children}</Text>;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  head: {\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n    fontStyle: \"normal\",\r\n  },\r\n});\r\n\r\nexport default Headings;\r\n","import React from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n} from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport AppText from \"./Text\";\r\n\r\nfunction Cards({ title, subTitle, imageUrl, onPress }) {\r\n  return (\r\n    <TouchableWithoutFeedback onPress={onPress}>\r\n      <View style={styles.card}>\r\n        <Image style={styles.image} source={{ uri: imageUrl }}></Image>\r\n        {/* <Image style={styles.image} source={imageUrl}></Image> */}\r\n        <View style={styles.detailedContainer}>\r\n          <AppText style={styles.title} numberOfLines={1}>\r\n            {title}\r\n          </AppText>\r\n          <AppText style={styles.subTitle} numberOfLines={2}>\r\n            {subTitle}\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    borderRadius: 15,\r\n    backgroundColor: colors.white,\r\n    marginBottom: 20,\r\n    overflow: \"hidden\",\r\n  },\r\n  detailedContainer: {\r\n    padding: 20,\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: 300,\r\n  },\r\n  subTitle: {\r\n    color: colors.secondary,\r\n    fontWeight: \"bold\",\r\n  },\r\n  title: {\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  Image,\r\n  StyleSheet,\r\n  TouchableHighlight,\r\n} from \"react-native\";\r\n\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\r\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\r\n\r\nimport AppText from \"../Text\";\r\nimport colors from \"../../config/colors\";\r\n\r\nfunction ListItem({\r\n  title,\r\n  subTitle,\r\n  image,\r\n  IconComponent,\r\n  onPress,\r\n  renderRightActions,\r\n}) {\r\n  return (\r\n    <GestureHandlerRootView>\r\n      <Swipeable renderRightActions={renderRightActions}>\r\n        <TouchableHighlight underlayColor={colors.lightgrey} onPress={onPress}>\r\n          <View style={styles.container}>\r\n            {IconComponent}\r\n            {image && <Image style={styles.image} source={image} />}\r\n            <View style={styles.detailsContainer}>\r\n              <AppText style={styles.title} numberOfLines={1}>\r\n                {title}\r\n              </AppText>\r\n              {subTitle && (\r\n                <AppText style={styles.subtitle} numberOfLines={2}>\r\n                  {subTitle}\r\n                </AppText>\r\n              )}\r\n            </View>\r\n            <MaterialCommunityIcons\r\n              color={colors.grey}\r\n              name=\"chevron-right\"\r\n              size={25}\r\n            />\r\n          </View>\r\n        </TouchableHighlight>\r\n      </Swipeable>\r\n    </GestureHandlerRootView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    padding: 15,\r\n    backgroundColor: colors.white,\r\n  },\r\n  detailsContainer: {\r\n    marginLeft: 10,\r\n    justifyContent: \"center\",\r\n    // width: 0,\r\n    flexGrow: 1,\r\n    flex: 1,\r\n  },\r\n  image: {\r\n    width: 70,\r\n    height: 70,\r\n    borderRadius: 35,\r\n  },\r\n  subtitle: {\r\n    color: colors.grey,\r\n  },\r\n  title: {\r\n    fontWeight: \"500\",\r\n  },\r\n});\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport default AuthContext;\r\n","import React, { useContext } from \"react\";\r\nimport { Image, View, Text, StyleSheet } from \"react-native\";\r\nimport AppText from \"../components/Text\";\r\nimport colors from \"../config/colors\";\r\nimport ListItem from \"../components/list/ListItem\";\r\nimport AuthContext from \"../auth/context\";\r\n\r\nfunction ListingDetailedScreens({ route }) {\r\n  const { user, setUser } = useContext(AuthContext);\r\n  const listing = route.params;\r\n  return (\r\n    <View>\r\n      <Image style={styles.image} source={{ uri: listing.product_img }} />\r\n      <View style={styles.detailsContainer}>\r\n        <AppText style={styles.title}>{listing.title}</AppText>\r\n        <AppText style={styles.price}>${listing.unit_price}</AppText>\r\n        <View style={styles.userContainer}>\r\n          <ListItem\r\n            image={require(\"../assets/message3.jpg\")}\r\n            title={user.name}\r\n            subTitle=\"5 Listing\"\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  detailsContainer: {\r\n    padding: 20,\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: 300,\r\n  },\r\n  price: {\r\n    color: colors.secondary,\r\n    fontWeight: \"bold\",\r\n    fontSize: 20,\r\n    marginVertical: 10,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"500\",\r\n  },\r\n  userContainer: {\r\n    marginVertical: 40,\r\n  },\r\n});\r\n\r\nexport default ListingDetailedScreens;\r\n","import React from \"react\";\r\nimport { StyleSheet, SafeAreaView, View } from \"react-native\";\r\nimport Constants from \"expo-constants\";\r\n\r\nfunction Screen({ children, style }) {\r\n  return (\r\n    <SafeAreaView style={[styles.screen, style]}>\r\n      <View style={[styles.view, style]}>{children}</View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    paddingTop: Constants.statusBarHeight + 5,\r\n    flex: 1,\r\n  },\r\n  view: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default Screen;\r\n","import React from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport colors from \"../../config/colors\";\r\n\r\nfunction ListItemSeperator(props) {\r\n  return <View style={styles.seperator} />;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  seperator: {\r\n    width: \"100%\",\r\n    height: 1,\r\n    backgroundColor: colors.lightgrey,\r\n  },\r\n});\r\n\r\nexport default ListItemSeperator;\r\n","import React from \"react\";\r\nimport { View, StyleSheet, TouchableWithoutFeedback } from \"react-native\";\r\nimport colors from \"../../config/colors\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nfunction ListItemDeleteAction({ onPress }) {\r\n  return (\r\n    <TouchableWithoutFeedback onPress={onPress}>\r\n      <View style={styles.container}>\r\n        <MaterialCommunityIcons\r\n          name=\"delete-forever-outline\"\r\n          size={35}\r\n          color=\"white\"\r\n        />\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: colors.danger,\r\n    width: 70,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default ListItemDeleteAction;\r\n","import React, { useState } from \"react\";\r\nimport { FlatList, View, StyleSheet, Text } from \"react-native\";\r\nimport ListItem from \"../components/list/ListItem\";\r\nimport Screen from \"../components/Screen\";\r\nimport ListItemSeperator from \"../components/list/ListItemSeperator\";\r\nimport ListItemDeleteAction from \"../components/list/ListItemDeleteAction\";\r\nimport colors from \"../config/colors\";\r\n\r\nconst initialMessages = [\r\n  {\r\n    id: 1,\r\n    title: \"Emily clark\",\r\n    description:\r\n      \"Hi, intrested in buying thedfdfdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff item!!!\",\r\n    image: require(\"../assets/message1.jpg\"),\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Michael B. Jordan\",\r\n    description: \"How are you Alex ???\",\r\n    image: require(\"../assets/message2.jpg\"),\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Joey Degrandis\",\r\n    description: \"Bye dude... \",\r\n    image: require(\"../assets/message3.jpg\"),\r\n  },\r\n];\r\n\r\nfunction MessagesScreen(props) {\r\n  const [messages, setMessages] = useState(initialMessages);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  console.log(messages, setMessages);\r\n  const handleDelete = (message) => {\r\n    setMessages(messages.filter((m) => m.id !== message.id));\r\n  };\r\n\r\n  return (\r\n    <Screen>\r\n      <View style={styles.headingContainer}>\r\n        <Text style={styles.heading}>Messages</Text>\r\n      </View>\r\n      <FlatList\r\n        data={messages}\r\n        keyExtractor={(message) => message.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <ListItem\r\n            title={item.title}\r\n            subTitle={item.description}\r\n            image={item.image}\r\n            onPress={() => console.log(\"Message seleted\", item)}\r\n            renderRightActions={() => (\r\n              <ListItemDeleteAction onPress={() => handleDelete(item)} />\r\n            )}\r\n          />\r\n        )}\r\n        ItemSeparatorComponent={ListItemSeperator}\r\n        refreshing={refreshing}\r\n        onRefresh={() => {\r\n          setMessages([\r\n            {\r\n              id: 4,\r\n              title: \"Kevin Dodger\",\r\n              description: \"Let's go out for a walk.\",\r\n              image: require(\"../assets/message4.jpg\"),\r\n            },\r\n            {\r\n              id: 1,\r\n              title: \"Joey Degrandis\",\r\n              description: \"Hi, intrested in buying the item!!!\",\r\n              image: require(\"../assets/message1.jpg\"),\r\n            },\r\n            {\r\n              id: 2,\r\n              title: \"Emily clark\",\r\n              description: \"How are you Alex ???\",\r\n              image: require(\"../assets/message2.jpg\"),\r\n            },\r\n            {\r\n              id: 3,\r\n              title: \"Michael B. Jordan\",\r\n              description: \"Bye dude... \",\r\n              image: require(\"../assets/message3.jpg\"),\r\n            },\r\n          ]);\r\n        }}\r\n      />\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  headingContainer: {\r\n    height: 60,\r\n    backgroundColor: colors.secondary,\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n  },\r\n  heading: {\r\n    fontSize: 25,\r\n    fontFamily: \"Roboto\",\r\n    paddingLeft: 15,\r\n  },\r\n});\r\n\r\nexport default MessagesScreen;\r\n","import React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nfunction Icon({\r\n  name,\r\n  size = 40,\r\n  backgroundColor = \"#000\",\r\n  iconColor = \"#fff\",\r\n}) {\r\n  return (\r\n    <View\r\n      style={{\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: size,\r\n        height: size,\r\n        borderRadius: size / 2,\r\n        backgroundColor: backgroundColor,\r\n      }}\r\n    >\r\n      <MaterialCommunityIcons name={name} color={iconColor} size={size / 2} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default Icon;\r\n","import { create } from \"apisauce\";\r\n\r\nconst apiClient = create({\r\n  credentials: \"include\",\r\n  // baseURL: \"https://fakestoreapi.com\", //url to add with backend in json file may be\r\n  baseURL: \"http://192.168.43.46:8000\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    // \"X-CSRFToken\": csrf,\r\n  },\r\n});\r\n\r\nexport default apiClient;\r\n","import client from \"./client\";\r\n\r\nconst endpoint = \"/api\";\r\n\r\nconst login = (email, password) =>\r\n  client.post(\"/members/api/login_user/\", { email: email, password: password });\r\n\r\nconst logout = () => client.get(\"/members/api/logout_user/\");\r\n\r\nconst register = (name, email, password) =>\r\n  client.post(\"/members/api/register_user/\", {\r\n    username: name,\r\n    email: email,\r\n    password: password,\r\n  });\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  register,\r\n};\r\n","import * as SecureStore from \"expo-secure-store\";\r\n\r\nconst key = \"authToken\";\r\nconst storeToken = async (authToken) => {\r\n  try {\r\n    await SecureStore.setItemAsync(key, authToken);\r\n  } catch (error) {\r\n    console.log(\"Error storing the auth token\", error);\r\n  }\r\n};\r\n\r\nconst getToken = async () => {\r\n  try {\r\n    return await SecureStore.getItemAsync(key);\r\n  } catch (error) {\r\n    console.log(\"Error getting the auth token\", error);\r\n  }\r\n};\r\n\r\nconst removeToken = async () => {\r\n  try {\r\n    await SecureStore.deleteItemAsync(key);\r\n  } catch (error) {\r\n    console.log(\"Error removing the auth token\", error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  storeToken,\r\n  getToken,\r\n  removeToken,\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { View, StyleSheet, FlatList } from \"react-native\";\r\nimport AuthContext from \"../auth/context\";\r\nimport Icon from \"../components/Icon\";\r\nimport ListItem from \"../components/list/ListItem\";\r\nimport ListItemSeperatorComponent from \"../components/list/ListItemSeperator\";\r\nimport Screen from \"../components/Screen\";\r\nimport colors from \"../config/colors\";\r\nimport routes from \"../navigation/routes\";\r\nimport authApi from \"../api/auth\";\r\nimport authStorage from \"../auth/storage\";\r\n\r\nconst menuItems = [\r\n  {\r\n    title: \"My Listings\",\r\n    icon: {\r\n      name: \"format-list-bulleted\",\r\n      backgroundColor: colors.primary,\r\n    },\r\n  },\r\n  {\r\n    title: \"My Messages\",\r\n    icon: {\r\n      name: \"email\",\r\n      backgroundColor: colors.secondary,\r\n    },\r\n    targetScreen: routes.MESSAGES,\r\n  },\r\n];\r\n\r\nfunction AccountScreen({ navigation }) {\r\n  const { user, setUser } = useContext(AuthContext);\r\n\r\n  const handleLogOut = () => {\r\n    authApi.logout();\r\n    setUser(null);\r\n    authStorage.removeToken();\r\n  };\r\n\r\n  return (\r\n    <Screen style={styles.screen}>\r\n      <View style={styles.container}>\r\n        <ListItem\r\n          title={user.name}\r\n          subTitle={user.email}\r\n          image={require(\"../assets/user.jpeg\")}\r\n        />\r\n        {/* <ListItem\r\n          title=\"Alex Garfin\"\r\n          subTitle=\"alexander.g45k25@gmail.com\"\r\n          image={require(\"../assets/user.jpeg\")}\r\n        /> */}\r\n      </View>\r\n      <View style={styles.container}>\r\n        <FlatList\r\n          data={menuItems}\r\n          keyExtractor={(menuItems) => menuItems.title}\r\n          renderItem={({ item }) => (\r\n            <ListItem\r\n              title={item.title}\r\n              IconComponent={\r\n                <Icon\r\n                  name={item.icon.name}\r\n                  backgroundColor={item.icon.backgroundColor}\r\n                />\r\n              }\r\n              onPress={() => navigation.navigate(item.targetScreen)}\r\n            />\r\n          )}\r\n          ItemSeparatorComponent={ListItemSeperatorComponent}\r\n        />\r\n      </View>\r\n      <ListItem\r\n        title=\"logout\"\r\n        IconComponent={<Icon name=\"logout\" backgroundColor=\"#ffe66d\" />}\r\n        onPress={handleLogOut}\r\n      />\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginVertical: 20,\r\n  },\r\n  screen: {\r\n    backgroundColor: colors.lightgrey,\r\n  },\r\n});\r\nexport default AccountScreen;\r\n","import React from \"react\";\r\nimport LottieView from \"lottie-react-native\";\r\n\r\nfunction ActivityIndicator({ visible = false }) {\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <LottieView\r\n      autoPlay\r\n      loop\r\n      source={require(\"../assets/animations/loader.json\")}\r\n    ></LottieView>\r\n  );\r\n}\r\n\r\nexport default ActivityIndicator;\r\n","import { useState } from \"react\";\r\n\r\nexport default useApi = (apiFunc) => {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const request = async (...args) => {\r\n    //   const request = async (...args) => {             //if has params\r\n    setLoading(true);\r\n    const response = await apiFunc(...args);\r\n    // const response = await apiFunc(...args);       //if has params\r\n    setLoading(false);\r\n\r\n    if (!response.ok) {\r\n      setError(true);\r\n      console.log(response.problem);\r\n      return;\r\n    }\r\n\r\n    setError(false);\r\n    setData(response.data);\r\n  };\r\n\r\n  return { data, error, loading, request };\r\n};\r\n","import client from \"./client\";\r\n// import csrf from \"./csrf\";\r\nimport { create } from \"apisauce\";\r\nimport { useState } from \"react\";\r\nimport authApi from \"../api/auth\";\r\nimport useApi from \"../hooks/useApi\";\r\n\r\nconst endpoint = \"/api\";\r\n// const getListings = (a, b, c) => client.get(endpoint);   if has params\r\nconst getListings = () => client.get(endpoint + \"/products/\");\r\n\r\n// let csrfToken;\r\n// async function getCsrfToken() {\r\n//   const response = await authApi.csrfreq();\r\n//   csrfToken = response.data.csrfToken;\r\n// }\r\n\r\n// const getCsrfToken = async () => {\r\n//   const [csrf, setCsrf] = useState(\"\");\r\n//   const response = await create({\r\n//     baseURL: \"http://192.168.43.46:8000\",\r\n//   }).get(\"/api/csrf/\");\r\n//   // console.log(\"====================================\");\r\n//   // console.log(response.data.csrfToken);\r\n//   // console.log(\"====================================\");\r\n//   setCsrf(response.data.csrfToken);\r\n//   // return response.data.csrfToken;\r\n// };\r\n\r\nconst addListing = async (listing, onUploadProgress) => {\r\n  // getCsrfToken();\r\n  // const data = {\r\n  //   title: listing.title,\r\n  //   unit_price: listing.price,\r\n  //   collection: listing.category.value,\r\n  //   description: listing.description,\r\n  //   product_img: listing.images,\r\n  // };\r\n  const data = new FormData(); //set content-type automatically multipart/form-data , method apisouce\r\n  data.append(\"title\", listing.title);\r\n  data.append(\"unit_price\", listing.price);\r\n  data.append(\"collection\", listing.category.value);\r\n  data.append(\"description\", listing.description);\r\n  data.append(\"product_img\", {\r\n    name: \"image.jpg\",\r\n    type: \"image/jpeg\",\r\n    uri: listing.images,\r\n  });\r\n\r\n  // listing.images.forEach((image, index) =>\r\n  //   data.append(\"images\", {\r\n  //     name: \"image\" + index,\r\n  //     type: \"image/jpeg\",\r\n  //     uri: image,\r\n  //   })\r\n  // );\r\n\r\n  // if (listing.location)\r\n  //   data.append(\"location\", JSON.stringify(listing.location));\r\n  const response = await create({\r\n    baseURL: \"http://192.168.43.46:8000\",\r\n  }).get(\"/api/csrf/\");\r\n\r\n  return create({\r\n    baseURL: \"http://192.168.43.46:8000\",\r\n    headers: {\r\n      // \"Content-Type\": \"application/json\",\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      \"X-CSRFToken\": response.data.csrfToken,\r\n    },\r\n  }).post(endpoint + \"/makeProduct/\", data, {\r\n    onUploadProgress: (progress) => {\r\n      onUploadProgress(progress.loaded / progress.total);\r\n    },\r\n  });\r\n};\r\nexport default {\r\n  addListing, //all the methods\r\n  getListings,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet, FlatList } from \"react-native\";\r\n\r\nimport ActivityIndicator from \"../components/ActivityIndicator\";\r\nimport AppText from \"../components/Text\";\r\nimport Button from \"../components/Button\";\r\nimport Card from \"../components/Cards\";\r\nimport colors from \"../config/colors\";\r\nimport listingsApi from \"../api/listing\";\r\nimport ListItemSeperatorComponent from \"../components/list/ListItemSeperator\";\r\nimport routes from \"../navigation/routes\";\r\nimport Screen from \"../components/Screen\";\r\nimport useApi from \"../hooks/useApi\";\r\n\r\n//hardcoded\r\n// const listings = [\r\n//   {\r\n//     id: 1,\r\n//     title: \"OneOdio premium wired Headphones\",\r\n//     price: 35.99,\r\n//     image: require(\"../assets/headphones.jpg\"),\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     title: \"Red Couch\",\r\n//     price: 1000,\r\n//     image: require(\"../assets/couch.jpg\"),\r\n//   },\r\n// ];\r\n\r\n// function ListingScreen({ navigation }) {\r\n//   const {\r\n//     data: listings,\r\n//     error,\r\n//     loading,\r\n//     request: loadListings,\r\n//   } = useApi(listingsApi.getListings);\r\n\r\n//   useEffect(() => {\r\n//     loadListings();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <Screen style={styles.screen}>\r\n//       {error && (\r\n//         <>\r\n//           <AppText>Couldn't recieve the listings</AppText>\r\n//           <Button title=\"Retry\" onPress={loadListings} />\r\n//         </>\r\n//       )}\r\n//       <ActivityIndicator visible={loading} />\r\n//       <FlatList\r\n//         data={listings}\r\n//         keyExtractor={(listing) => listing.id.toString()}\r\n//         renderItem={({ item }) => (\r\n//           <Card\r\n//             title={item.title}\r\n//             subTitle={\"$\" + item.price}\r\n//             imageUrl={item.image}\r\n//             // imageUrl={item.images[0].url}}\r\n//             onPress={() => navigation.navigate(routes.LISTING_DETAILS, item)}\r\n//           />\r\n//         )}\r\n//         ItemSeparatorComponent={ListItemSeperatorComponent}\r\n//       />\r\n//     </Screen>\r\n//   );\r\n// }\r\n\r\nfunction ListingScreen({ navigation }) {\r\n  const getListingApi = useApi(listingsApi.getListings);\r\n\r\n  useEffect(() => {\r\n    getListingApi.request();\r\n    // getListingApi.request(1,2,3);       //if has params\r\n  }, []);\r\n\r\n  return (\r\n    <Screen style={styles.screen}>\r\n      {getListingApi.error && (\r\n        <>\r\n          <AppText>Couldn't recieve the listings</AppText>\r\n          <Button title=\"Retry\" onPress={getListingApi.request} />\r\n        </>\r\n      )}\r\n      <ActivityIndicator visible={getListingApi.loading} />\r\n      <FlatList\r\n        data={getListingApi.data}\r\n        keyExtractor={(listing) => listing.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <Card\r\n            title={item.title}\r\n            subTitle={\"$\" + item.unit_price}\r\n            imageUrl={item.product_img}\r\n            // imageUrl={item.images[0].url}}\r\n            onPress={() => navigation.navigate(routes.LISTING_DETAILS, item)}\r\n          />\r\n        )}\r\n        ItemSeparatorComponent={ListItemSeperatorComponent}\r\n        refreshing={false}\r\n        onRefresh={() => {\r\n          getListingApi.request();\r\n        }}\r\n      />\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    padding: 10,\r\n    backgroundColor: colors.lightgrey,\r\n  },\r\n});\r\n\r\nexport default ListingScreen;\r\n","import React from \"react\";\r\nimport { View, StyleSheet, TextInput } from \"react-native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport defaultStyles from \"../config/styles\";\r\n\r\nfunction AppTextInput({ icon, width = \"100%\", ...otheProps }) {\r\n  return (\r\n    <View style={[styles.container, { width }]}>\r\n      {icon && (\r\n        <MaterialCommunityIcons\r\n          name={icon}\r\n          size={27}\r\n          color={defaultStyles.colors.grey}\r\n          style={styles.icon}\r\n        />\r\n      )}\r\n      <TextInput\r\n        placeholderTextColor={defaultStyles.colors.placeholdercol}\r\n        style={defaultStyles.text}\r\n        {...otheProps}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: defaultStyles.colors.lightgrey,\r\n    borderRadius: 25,\r\n    flexDirection: \"row\",\r\n    padding: 15,\r\n    marginVertical: 10,\r\n  },\r\n  icon: {\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nexport default AppTextInput;\r\n","import React from \"react\";\r\nimport { TouchableOpacity, StyleSheet } from \"react-native\";\r\nimport AppText from \"./Text\";\r\n\r\nfunction PickerItem({ item, onPress }) {\r\n  return (\r\n    <TouchableOpacity onPress={onPress}>\r\n      <AppText style={styles.text}>{item.label}</AppText>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    padding: 20,\r\n  },\r\n});\r\n\r\nexport default PickerItem;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableWithoutFeedback,\r\n  Modal,\r\n  Button,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport defaultStyles from \"../config/styles\";\r\nimport AppText from \"./Text\";\r\nimport Screen from \"./Screen\";\r\nimport PickerItem from \"./PickerItem\";\r\n\r\nfunction AppPicker({\r\n  icon,\r\n  items,\r\n  numberOfColumns = 1,\r\n  onSelectItem,\r\n  PickerItemComponent = PickerItem,\r\n  placeholder,\r\n  selectedItem,\r\n  width = \"100%\",\r\n}) {\r\n  const [modalVisiible, setModalVisiible] = useState(false);\r\n  return (\r\n    <>\r\n      <TouchableWithoutFeedback onPress={() => setModalVisiible(true)}>\r\n        <View style={[styles.container, { width }]}>\r\n          {icon && (\r\n            <MaterialCommunityIcons\r\n              name={icon}\r\n              size={27}\r\n              color={defaultStyles.colors.grey}\r\n              style={styles.icon}\r\n            />\r\n          )}\r\n          {selectedItem ? (\r\n            <AppText style={styles.text}>{selectedItem.label}</AppText>\r\n          ) : (\r\n            <AppText style={styles.placeholder}>{placeholder}</AppText>\r\n          )}\r\n          <MaterialCommunityIcons\r\n            name=\"chevron-down\"\r\n            size={27}\r\n            color={defaultStyles.colors.grey}\r\n          />\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n      <Modal visible={modalVisiible} animationType=\"slide\">\r\n        <Screen>\r\n          <Button\r\n            title=\"close\"\r\n            onPress={() => setModalVisiible(false)}\r\n            // color=\"white\"\r\n            style={styles.closebutton}\r\n          />\r\n          <FlatList\r\n            data={items}\r\n            keyExtractor={(item) => item.value.toString()}\r\n            numColumns={numberOfColumns}\r\n            renderItem={({ item }) => (\r\n              <PickerItemComponent\r\n                item={item}\r\n                label={item.label}\r\n                onPress={() => {\r\n                  setModalVisiible(false);\r\n                  onSelectItem(item);\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n        </Screen>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: defaultStyles.colors.lightgrey,\r\n    borderRadius: 25,\r\n    flexDirection: \"row\",\r\n    padding: 15,\r\n    marginVertical: 10,\r\n  },\r\n  closebutton: {\r\n    backgroundColor: \"green\",\r\n  },\r\n  placeholder: {\r\n    color: defaultStyles.colors.placeholdercol,\r\n    flex: 1,\r\n  },\r\n  text: {\r\n    flex: 1,\r\n  },\r\n  icon: {\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nexport default AppPicker;\r\n","import { Formik } from \"formik\";\r\nimport React from \"react\";\r\n\r\nfunction AppForm({ initialValues, onSubmit, validationSchema, children }) {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={onSubmit} //to call server to pass the values\r\n      validationSchema={validationSchema}\r\n    >\r\n      {() => <>{children}</>}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default AppForm;\r\n","import React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport AppText from \"../Text\";\r\n\r\nfunction ErrorMessage({ error, visible }) {\r\n  if (!visible || !error) return null;\r\n  return <AppText style={styles.error}>{error}</AppText>;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  error: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nexport default ErrorMessage;\r\n","import React from \"react\";\r\nimport { useFormikContext } from \"formik\";\r\nimport AppTextInput from \"../TextInput\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\n\r\nfunction AppFormFeild({ name, width, ...otherProps }) {\r\n  const { setFieldTouched, setFieldValue, errors, touched, values } =\r\n    useFormikContext();\r\n  return (\r\n    <>\r\n      <AppTextInput\r\n        onBlur={() => setFieldTouched(name)}\r\n        onChangeText={(text) => setFieldValue(name, text)}\r\n        value={values[name]}\r\n        width={width}\r\n        //   onChangeText={(text) => setEmail(text)}\r\n        {...otherProps}\r\n      />\r\n      <ErrorMessage error={errors[name]} visible={touched[name]} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppFormFeild;\r\n","import React from \"react\";\r\nimport { useFormikContext } from \"formik\";\r\n\r\nimport AppButton from \"../Button\";\r\n\r\nfunction SubmitButton({ title }) {\r\n  const { handleSubmit } = useFormikContext();\r\n  return <AppButton title={title} onPress={handleSubmit} />;\r\n}\r\n\r\nexport default SubmitButton;\r\n\r\n// http://120.0.0.1:8000/members/login_user (username, password)\r\n","import React from \"react\";\r\nimport { useFormikContext } from \"formik\";\r\n\r\nimport AppPicker from \"../Picker\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\n\r\nfunction AppFormPicker({\r\n  items,\r\n  name,\r\n  numberOfColumns,\r\n  PickerItemComponent,\r\n  placeholder,\r\n  width,\r\n}) {\r\n  const { errors, setFieldValue, touched, values } = useFormikContext();\r\n  return (\r\n    <>\r\n      <AppPicker\r\n        items={items}\r\n        numberOfColumns={numberOfColumns}\r\n        onSelectItem={(item) => setFieldValue(name, item)}\r\n        PickerItemComponent={PickerItemComponent}\r\n        placeholder={placeholder}\r\n        selectedItem={values[name]}\r\n        width={width}\r\n      />\r\n      <ErrorMessage error={errors[name]} visible={touched[name]} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppFormPicker;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { StyleSheet, Image, View } from \"react-native\";\r\nimport * as Yup from \"yup\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport Screen from \"../components/Screen\";\r\nimport {\r\n  AppForm,\r\n  AppFormFeild,\r\n  ErrorMessage,\r\n  SubmitButton,\r\n} from \"../components/forms\";\r\n// import AppFormFeild from \"../components/forms/AppFormFeild\";\r\n// import AppForm from \"../components/forms/AppForm\";\r\n// import SubmitButton from \"../components/forms/SubmitButton\";\r\nimport authApi from \"../api/auth\";\r\nimport AuthContext from \"../auth/context\";\r\nimport useApi from \"../hooks/useApi\";\r\nimport authStorage from \"../auth/storage\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().required().email().label(\"Email\"),\r\n  password: Yup.string().required().min(4).label(\"Password\"),\r\n});\r\n\r\nfunction LoginScreen(props) {\r\n  //   const [email, setEmail] = useState();\r\n  //   const [pwd, setPwd] = useState();\r\n  const [loginFailed, setLoginFailed] = useState();\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const handleSubmit = async ({ email, password }) => {\r\n    // console.log(\"Click!!!\");\r\n    const result = await authApi.login(email, password);\r\n    console.log(result.data);\r\n    if (!result.ok || result.data[0] === null) return setLoginFailed(true);\r\n    setLoginFailed(false);\r\n    authContext.setUser(result.data);\r\n    authStorage.storeToken(result.data);\r\n    // const user = jwtDecode(result.data);\r\n  };\r\n\r\n  // const handleSubmit = () => {\r\n  //   const getListingUsers = useApi(authApi.getUsers);\r\n\r\n  //   useEffect(() => {\r\n  //     getListingUsers.request();\r\n  //   }, []);\r\n\r\n  // console.log(getListingUsers.data);\r\n  // const result = await authApi.login();\r\n  // if (!result.ok) return setLoginFailed(true);\r\n  // setLoginFailed(false);\r\n  // // console.log(result.data);\r\n  // const user = jwtDecode(result.data);\r\n  // // console.log(user);\r\n  // authContext.setUser(user);\r\n  // };\r\n\r\n  return (\r\n    <Screen style={styles.container}>\r\n      <Image style={styles.logo} source={require(\"../assets/logo-red.png\")} />\r\n      <AppForm\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        onSubmit={handleSubmit} //to call server to pass the values\r\n        validationSchema={validationSchema}\r\n      >\r\n        <ErrorMessage\r\n          error=\"Invalid email and/or password.\"\r\n          visible={loginFailed}\r\n        />\r\n        <AppFormFeild\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          icon=\"email\"\r\n          keyboardType=\"email-address\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          textContentType=\"emailAddress\" //only iOS\r\n        />\r\n        <AppFormFeild\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          icon=\"lock\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          secureTextEntry\r\n          textContentType=\"password\"\r\n        />\r\n        <SubmitButton title=\"Login\" />\r\n      </AppForm>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 10,\r\n  },\r\n  logo: {\r\n    width: 80,\r\n    height: 80,\r\n    alignSelf: \"center\",\r\n    marginTop: 50,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n","import React from \"react\";\r\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport AppText from \"./Text\";\r\nimport Icon from \"./Icon\";\r\n\r\nfunction CategoryPickerItem({ item, onPress }) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity onPress={onPress}>\r\n        <View>\r\n          <Icon\r\n            backgroundColor={item.backgroundColor}\r\n            name={item.icon}\r\n            size={70}\r\n          />\r\n          <AppText style={styles.label}>{item.label} </AppText>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingHorizontal: 18,\r\n    paddingVertical: 15,\r\n    alignItems: \"center\",\r\n    width: \"34%\",\r\n  },\r\n  label: {\r\n    marginTop: 5,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default CategoryPickerItem;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n  Alert,\r\n} from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nfunction ImageInput({ imageUri, onChangeImage }) {\r\n  useEffect(() => {\r\n    requestPermission();\r\n  }, []);\r\n\r\n  const requestPermission = async () => {\r\n    // const { granted } = await Permissions.askAsync(Permissions.MEDIA_LIBRARY, Permissions.LOCATION_BACKGROUND);\r\n    // if (!granted)\r\n    //   alert(\"you need to enable the permission to access the library...\");\r\n    // OR\r\n    const { granted } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (!granted)\r\n      alert(\"you need to enable the permission to access the library...\");\r\n  };\r\n\r\n  const handlePress = () => {\r\n    if (!imageUri) selectImage();\r\n    else\r\n      Alert.alert(\"Delete\", \"Are you sure do you want to delete this image?\", [\r\n        { text: \"yes\", onPress: () => onChangeImage(null) },\r\n        { text: \"no\" },\r\n      ]);\r\n  };\r\n\r\n  const selectImage = async () => {\r\n    try {\r\n      const result = await ImagePicker.launchImageLibraryAsync({\r\n        // base64: true,\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images, //to choose images media only\r\n        quality: 0.5, //range of value bwtween 0 to 1, low to high quality\r\n      });\r\n      console.log(result.uri);\r\n      if (!result.cancelled) onChangeImage(result.uri);\r\n    } catch (error) {\r\n      console.log(\"Error reading in image\", error);\r\n    }\r\n  };\r\n  return (\r\n    <TouchableWithoutFeedback onPress={handlePress}>\r\n      <View style={styles.container}>\r\n        {!imageUri && (\r\n          <MaterialCommunityIcons name=\"camera\" size={50} color={colors.grey} />\r\n        )}\r\n        {imageUri && <Image source={{ uri: imageUri }} style={styles.image} />}\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.lightgrey,\r\n    borderRadius: 15,\r\n    height: 100,\r\n    overflow: \"hidden\",\r\n    justifyContent: \"center\",\r\n    width: 100,\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n});\r\n\r\nexport default ImageInput;\r\n","import React, { useRef } from \"react\";\r\nimport { View, StyleSheet, ScrollView } from \"react-native\";\r\nimport ImageInput from \"./ImageInput\";\r\n\r\nfunction ImageInputList({ imageUris = [], onRemoveImage, onAddImage }) {\r\n  const scrollView = useRef();\r\n  return (\r\n    <View>\r\n      <ScrollView\r\n        ref={scrollView}\r\n        horizontal\r\n        onContentSizeChange={() => scrollView.current.scrollToEnd()}\r\n      >\r\n        <View style={styles.container}>\r\n          {imageUris.map((uri) => (\r\n            <View key={uri} style={styles.image}>\r\n              <ImageInput\r\n                imageUri={uri}\r\n                onChangeImage={() => onRemoveImage(uri)}\r\n              />\r\n            </View>\r\n          ))}\r\n          <ImageInput onChangeImage={(uri) => onAddImage(uri)} />\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n  },\r\n  image: {\r\n    marginRight: 5,\r\n  },\r\n});\r\n\r\nexport default ImageInputList;\r\n","import React from \"react\";\r\nimport { useFormikContext } from \"formik\";\r\n\r\nimport ErrorMessage from \"./ErrorMessage\";\r\nimport ImageInputList from \"../ImageInputList\";\r\nimport ImageInput from \"../ImageInput\";\r\n\r\nfunction FormImagePicker({ name }) {\r\n  const { errors, setFieldValue, touched, values } = useFormikContext();\r\n  const imageUris = values[name];\r\n\r\n  // console.log(imageUris);\r\n\r\n  // const handleAdd = (uri) => {\r\n  //   setFieldValue(name, [...imageUris, uri]);\r\n  // };\r\n\r\n  const handleAdd = (uri) => {\r\n    setFieldValue(name, uri);\r\n  };\r\n\r\n  const handleRemove = (uri) => {\r\n    setFieldValue(\r\n      name,\r\n      imageUris.filter((imageUri) => imageUri != uri)\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {/* <ImageInputList\r\n        imageUris={imageUris}\r\n        onAddImage={handleAdd}\r\n        onRemoveImage={handleRemove}\r\n      /> */}\r\n      <ImageInput imageUri={imageUris} onChangeImage={handleAdd} />\r\n      <ErrorMessage error={errors[name]} visible={touched[name]} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormImagePicker;\r\n","import { useState, useEffect } from \"react\";\r\nimport * as Location from \"expo-location\";\r\n\r\nexport default useLocation = () => {\r\n  const [location, setLocation] = useState();\r\n\r\n  useEffect(() => {\r\n    getLocation();\r\n  }, []);\r\n\r\n  const getLocation = async () => {\r\n    try {\r\n      const { granted } = await Location.getBackgroundPermissionsAsync();\r\n      if (!granted)\r\n        alert(\"you need to enable the permission to access the library...\");\r\n      const {\r\n        coords: { latitude, longitude },\r\n      } = await Location.getLastKnownPositionAsync();\r\n      setLocation({ latitude, longitude });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return location;\r\n};\r\n","import React from \"react\";\r\nimport { View, StyleSheet, Modal } from \"react-native\";\r\nimport * as Progress from \"react-native-progress\";\r\nimport LottieView from \"lottie-react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\nfunction UploadScreen({ onDone, progress = 0, visible = false }) {\r\n  return (\r\n    <Modal visible={visible}>\r\n      <View style={styles.container}>\r\n        {progress < 1 ? (\r\n          <Progress.Bar\r\n            progress={progress}\r\n            color={colors.primary}\r\n            width={200}\r\n          />\r\n        ) : (\r\n          <LottieView\r\n            autoPlay\r\n            loop={false}\r\n            onAnimationFinish={onDone}\r\n            source={require(\"../assets/animations/done.json\")}\r\n            style={styles.animation}\r\n          />\r\n        )}\r\n      </View>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  animation: {\r\n    width: 250,\r\n  },\r\n  container: {\r\n    alignItems: \"center\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nexport default UploadScreen;\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport {\r\n  AppForm,\r\n  AppFormFeild as FormFeild, //alias\r\n  SubmitButton,\r\n  AppFormPicker as Picker,\r\n} from \"../components/forms\";\r\nimport CategoryPickerItem from \"../components/CategoryPickerItem\";\r\nimport Headings from \"../components/list/Headings\";\r\nimport FormImagePicker from \"../components/forms/FormImagePicker\";\r\nimport useLocation from \"../hooks/useLocation\";\r\nimport listingApi from \"../api/listing\";\r\nimport Screen from \"../components/Screen\";\r\nimport UploadScreen from \"./UploadScreen\";\r\nimport ImageInput from \"../components/ImageInput\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  title: Yup.string().required().min(1).label(\"Title\"),\r\n  price: Yup.string().required().min(1).max(10000).label(\"Price\"),\r\n  description: Yup.string().label(\"Description\"),\r\n  category: Yup.object().required().nullable().label(\"Category\"),\r\n  // images: Yup.array().min(1, \"Please select atleast ine image.  \"),\r\n  images: Yup.string()\r\n    .required()\r\n    .nullable()\r\n    .min(1, \"Please select atleast ine image.  \"),\r\n});\r\n\r\nconst categories = [\r\n  {\r\n    label: \"Furniture\",\r\n    value: 1,\r\n    backgroundColor: \"tomato\",\r\n    icon: \"floor-lamp\",\r\n  },\r\n  { label: \"Cars\", value: 2, backgroundColor: \"darkorange\", icon: \"car\" },\r\n  { label: \"Camera\", value: 3, backgroundColor: \"gold\", icon: \"camera\" },\r\n  {\r\n    label: \"Games\",\r\n    value: 4,\r\n    backgroundColor: \"limegreen\",\r\n    icon: \"gamepad-variant\",\r\n  },\r\n  {\r\n    label: \"Clothing\",\r\n    value: 5,\r\n    backgroundColor: \"turquoise\",\r\n    icon: \"tshirt-crew\",\r\n  },\r\n  {\r\n    label: \"Sports\",\r\n    value: 6,\r\n    backgroundColor: \"steelblue\",\r\n    icon: \"basketball\",\r\n  },\r\n  {\r\n    label: \"Movies & Music\",\r\n    value: 7,\r\n    backgroundColor: \"dodgerblue\",\r\n    icon: \"headphones\",\r\n  },\r\n  {\r\n    label: \"Books\",\r\n    value: 8,\r\n    backgroundColor: \"salmon\",\r\n    icon: \"book-open-variant\",\r\n  },\r\n  {\r\n    label: \"Others\",\r\n    value: 9,\r\n    backgroundColor: \"dimgrey\",\r\n    icon: \"application\",\r\n  },\r\n];\r\n\r\nfunction ListingEditScreen(props) {\r\n  const location = useLocation();\r\n\r\n  const [uploadVisible, setUploadVisible] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  handleSubmit = async (listing, { resetForm }) => {\r\n    setProgress(0);\r\n    setUploadVisible(true);\r\n    const result = await listingApi.addListing(\r\n      { ...listing, location },\r\n      (progress) => setProgress(progress)\r\n    );\r\n\r\n    console.log(\"====================================\");\r\n    console.log(result.data);\r\n    console.log(\"====================================\");\r\n\r\n    if (!result.ok) {\r\n      setUploadVisible(false);\r\n      return alert(\"couldn't save the listing.\");\r\n    }\r\n    // alert(\"Success\");\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <Screen style={styles.container}>\r\n      <UploadScreen\r\n        onDone={() => setUploadVisible(false)}\r\n        progress={progress}\r\n        visible={uploadVisible}\r\n      />\r\n      <Headings style={{ color: \"dodgerblue\", padding: 10 }}>New Post</Headings>\r\n      <AppForm\r\n        initialValues={{\r\n          title: \"\",\r\n          price: \"\",\r\n          description: \"\",\r\n          categoty: null,\r\n          images: null,\r\n          // images:[],\r\n        }}\r\n        onSubmit={handleSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <FormImagePicker name=\"images\" />\r\n        <FormFeild maxLength={255} name=\"title\" placeholder=\"Title\" />\r\n        <FormFeild\r\n          keyboardType=\"numeric\"\r\n          maxLength={8} //10000.99\r\n          name=\"price\"\r\n          placeholder=\"Price\"\r\n          width={120}\r\n        />\r\n        <Picker\r\n          items={categories}\r\n          name=\"category\"\r\n          placeholder=\"Category\"\r\n          numberOfColumns={3}\r\n          PickerItemComponent={CategoryPickerItem}\r\n          width=\"50%\"\r\n        />\r\n        <FormFeild\r\n          maxLength={255}\r\n          multiline\r\n          name=\"description\"\r\n          numberOfLines={3}\r\n          placeholder=\"Description\"\r\n        />\r\n        <SubmitButton title=\"Post\" />\r\n      </AppForm>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 5,\r\n  },\r\n});\r\nexport default ListingEditScreen;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { StyleSheet, Image, View } from \"react-native\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Screen from \"../components/Screen\";\r\nimport { AppForm, AppFormFeild, SubmitButton } from \"../components/forms\";\r\n// import AppFormFeild from \"../components/forms/AppFormFeild\";\r\n// import AppForm from \"../components/forms/AppForm\";\r\n// import SubmitButton from \"../components/forms/SubmitButton\";\r\nimport authApi from \"../api/auth\";\r\nimport AuthContext from \"../auth/context\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required().min(1).label(\"Name\"),\r\n  email: Yup.string().required().email().label(\"Email\"),\r\n  password: Yup.string().required().min(4).label(\"Password\"),\r\n});\r\n\r\nfunction LoginScreen(props) {\r\n  const authContext = useContext(AuthContext);\r\n  //   const [email, setEmail] = useState();\r\n  //   const [pwd, setPwd] = useState();\r\n  const handleSubmit = async ({ name, email, password }) => {\r\n    const result = await authApi.register(name, email, password);\r\n    console.log(result.data);\r\n    // if (!result.ok || result.data[0] === null) return setLoginFailed(true);\r\n    // setLoginFailed(false);\r\n    authContext.setUser(result.data);\r\n  };\r\n\r\n  return (\r\n    <Screen style={styles.container}>\r\n      <Image style={styles.logo} source={require(\"../assets/logo-red.png\")} />\r\n      <AppForm\r\n        initialValues={{ name: \"\", email: \"\", password: \"\" }}\r\n        onSubmit={handleSubmit} //to call server to pass the values\r\n        validationSchema={validationSchema}\r\n      >\r\n        <AppFormFeild\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          icon=\"account\"\r\n          keyboardType=\"default\"\r\n          name=\"name\"\r\n          placeholder=\"Name\"\r\n          textContentType=\"name\" //only iOS\r\n        />\r\n        <AppFormFeild\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          icon=\"email\"\r\n          keyboardType=\"email-address\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          textContentType=\"emailAddress\" //only iOS\r\n        />\r\n        <AppFormFeild\r\n          autoCapitalize=\"none\"\r\n          autoCorrect={false}\r\n          icon=\"lock\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          secureTextEntry\r\n          textContentType=\"password\"\r\n        />\r\n        <SubmitButton title=\"Register\" />\r\n      </AppForm>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 10,\r\n  },\r\n  logo: {\r\n    width: 80,\r\n    height: 80,\r\n    alignSelf: \"center\",\r\n    marginTop: 50,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport WelcomeScreen from \"../screens/WelcomeScreen\";\r\nimport RegisterScreen from \"../screens/RegisterScreen\";\r\nimport LoginScreen from \"../screens/LoginScreen\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst AuthNavigator = () => (\r\n  <Stack.Navigator>\r\n    <Stack.Screen\r\n      name=\"Welcome\"\r\n      component={WelcomeScreen}\r\n      options={{ headerShown: false }}\r\n    />\r\n    <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n    <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n  </Stack.Navigator>\r\n);\r\n\r\nexport default AuthNavigator;\r\n","import { DefaultTheme } from \"@react-navigation/native\";\r\nimport colors from \"../config/colors\";\r\n\r\nexport default {\r\n  ...DefaultTheme,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    primary: colors.primary,\r\n    background: colors.white,\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport ListingScreen from \"../screens/ListingScreen\";\r\nimport ListingDetailedScreens from \"../screens/ListingDetailedScreens\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst FeedNavigator = () => (\r\n  <Stack.Navigator mode=\"modal \" screenOptions={{ headerShown: false }}>\r\n    <Stack.Screen name=\"Listings\" component={ListingScreen} />\r\n    <Stack.Screen name=\"ListingDetails\" component={ListingDetailedScreens} />\r\n  </Stack.Navigator>\r\n);\r\n\r\nexport default FeedNavigator;\r\n","import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport AccountScreen from \"../screens/AccountScreen\";\r\nimport MessagesScreen from \"../screens/MessagesScreen\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst AccountNavigator = () => (\r\n  <Stack.Navigator>\r\n    <Stack.Screen\r\n      name=\"Account\"\r\n      component={AccountScreen}\r\n      options={{\r\n        headerTitleAlign: \"center\",\r\n      }}\r\n    />\r\n    <Stack.Screen\r\n      name=\"Messages\"\r\n      component={MessagesScreen}\r\n      options={{ headerShown: false }}\r\n    />\r\n  </Stack.Navigator>\r\n);\r\n\r\nexport default AccountNavigator;\r\n","import React from \"react\";\r\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nfunction NewListingButton({onPress}) {\r\n  return (\r\n    <TouchableOpacity onPress={onPress}>\r\n      <View style={styles.container}>\r\n        <MaterialCommunityIcons name=\"plus\" size={60} color={colors.white} />\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: colors.primary,\r\n    borderRadius: 40,\r\n    bottom: 30,\r\n    borderColor: colors.white,\r\n    borderWidth: 10,\r\n    height: 80,\r\n    width: 80,\r\n  },\r\n});\r\n\r\nexport default NewListingButton;\r\n","import React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\n\r\nimport ListingEditScreen from \"../screens/ListingEditScreen\";\r\nimport FeedNavigator from \"./FeedNavigator\";\r\nimport AccountNavigator from \"./AccountNavigator\";\r\nimport NewListingButton from \"./NewListingButton\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst AppNavigator = () => (\r\n  <Tab.Navigator screenOptions={{ headerShown: false }}>\r\n    <Tab.Screen\r\n      name=\"Feed\"\r\n      component={FeedNavigator}\r\n      options={{\r\n        tabBarIcon: ({ size, color }) => (\r\n          <MaterialCommunityIcons name=\"home\" size={size} color={color} />\r\n        ),\r\n      }}\r\n    />\r\n    <Tab.Screen\r\n      name=\"ListingsEdit\"\r\n      component={ListingEditScreen}\r\n      options={({ navigation }) => ({\r\n        tabBarButton: () => (\r\n          <NewListingButton\r\n            onPress={() => navigation.navigate(\"ListingsEdit\")}\r\n          />\r\n        ),\r\n      })}\r\n    />\r\n    <Tab.Screen\r\n      name=\"Account\"\r\n      component={AccountNavigator}\r\n      options={{\r\n        tabBarIcon: ({ size, color }) => (\r\n          <MaterialCommunityIcons name=\"account\" size={size} color={color} />\r\n        ),\r\n      }}\r\n    />\r\n  </Tab.Navigator>\r\n);\r\n\r\nexport default AppNavigator;\r\n","import React from \"react\";\r\nimport { View, StyleSheet, Text, SafeAreaView } from \"react-native\";\r\nimport Constants from \"expo-constants\";\r\nimport { useNetInfo } from \"@react-native-community/netinfo\";\r\n\r\nimport colors from \"../config/colors\";\r\n\r\nfunction OfflineNotice(props) {\r\n  const netInfo = useNetInfo();\r\n  if (netInfo.type !== \"unknown\" && netInfo.isInternetReachable === false)\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.text}>No Internet Connection</Text>\r\n      </View>\r\n    );\r\n  return null;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: colors.primary,\r\n    height: 50,\r\n    position: \"absolute\",\r\n    top: Constants.statusBarHeight,\r\n    zIndex: 1,\r\n    elevation: 1,\r\n    width: \"100%\",\r\n  },\r\n  text: {\r\n    color: colors.white,\r\n    fontSize: 15,\r\n  },\r\n});\r\n\r\nexport default OfflineNotice;\r\n","import {\r\n  View,\r\n  Text,\r\n  Card,\r\n  TextInput,\r\n  Switch,\r\n  Button,\r\n  Image,\r\n  LogBox,\r\n} from \"react-native\";\r\nimport { AppLoading } from \"expo\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport WelcomeScreen from \"./app/screens/WelcomeScreen\";\r\nimport ViewImageScreen from \"./app/screens/ViewImageScreen\";\r\nimport AppText from \"./app/components/Text\";\r\nimport Headings from \"./app/components/list/Headings\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport AppButton from \"./app/components/Button\";\r\nimport Cards from \"./app/components/Cards\";\r\nimport ListingDetailedScreens from \"./app/screens/ListingDetailedScreens\";\r\nimport MessagesScreen from \"./app/screens/MessagesScreen\";\r\nimport Screen from \"./app/components/Screen\";\r\nimport Icon from \"./app/components/Icon\";\r\nimport ListItem from \"./app/components/list/ListItem\";\r\nimport colors from \"./app/config/colors\";\r\nimport AccountScreen from \"./app/screens/AccountScreen\";\r\nimport ListingScreen from \"./app/screens/ListingScreen\";\r\nimport AppTextInput from \"./app/components/TextInput\";\r\nimport AppPicker from \"./app/components/Picker\";\r\nimport LoginScreen from \"./app/screens/LoginScreen\";\r\nimport ListingEditScreen from \"./app/screens/ListingEditScreen\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport ImageInput from \"./app/components/ImageInput\";\r\nimport ImageInputList from \"./app/components/ImageInputList\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { NavigationContainer, useNavigation } from \"@react-navigation/native\";\r\nimport AuthNavigator from \"./app/navigation/AuthNavigator\";\r\nimport NavigationTheme from \"./app/navigation/NavigationTheme\";\r\nimport AppNavigator from \"./app/navigation/AppNavigator\";\r\nimport OfflineNotice from \"./app/components/OfflineNotice\";\r\nimport AuthContext from \"./app/auth/context\";\r\nimport authStorage from \"./app/auth/storage\";\r\n\r\n/////////////////////////////////\r\n// import Amplify from \"aws-amplify\";\r\n// import config from \"./aws-exports\";\r\n\r\n// Amplify.configure(config);\r\n//////////////////////////\r\n\r\n// Note :  @react-navigation/stack and /native should be same version to run the app\r\n\r\nLogBox.ignoreLogs([\r\n  \"It appears that you are using old version of react-navigation library\",\r\n]); //ignore specific warning only\r\n// LogBox.ignoreAllLogs(); //ignore all logs\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState(null);\r\n  const [isReady, setIsReady] = useState(false);\r\n\r\n  const restoreToken = async () => {\r\n    const token = await authStorage.getToken();\r\n    if (!token) return;\r\n    setUser(token);\r\n  };\r\n\r\n  useEffect(() => {\r\n    restoreToken();\r\n  }, []);\r\n  // if (!isReady) return <AppLoading onFinish={() => setIsReady(true)} />;\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser }}>\r\n      <OfflineNotice />\r\n      <NavigationContainer theme={NavigationTheme}>\r\n        {user != null ? <AppNavigator /> : <AuthNavigator />}\r\n        {/* <AppNavigator /> */}\r\n      </NavigationContainer>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/background.d37f87e0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/headphones.71664e04.jpg\";","module.exports = __webpack_public_path__ + \"static/media/message4.48a9569a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/user.71e00ef6.jpeg\";"],"sourceRoot":""}